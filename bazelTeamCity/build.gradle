buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.github.rodm.teamcity-agent' version "1.0"
}

apply plugin: 'com.google.protobuf'

// Provide convenience executables for trying out the examples.
apply plugin: 'application'

repositories {
    mavenCentral()
    mavenLocal()
}

// IMPORTANT: You probably want the non-SNAPSHOT version of gRPC. Make sure you
// are looking at a tagged version of the example and not "master"!

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
def grpcVersion = '1.14.0' // CURRENT_GRPC_VERSION

def teamcityVersion = '2018.1.1'

dependencies {
    compile project(':rx')
    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "com.google.api.grpc:proto-google-common-protos:1.0.0"
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    provided "org.jetbrains.teamcity:common-api:${teamcityVersion}"
    testCompile "io.grpc:grpc-testing:${grpcVersion}" // gRCP testing utilities
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.9.5"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.6"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.6"
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
            srcDir 'src/main/proto/v1'
            srcDir 'src/main/proto/bazel'
        }
    }
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.5.1-1' }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

startScripts.enabled = false

task helloWorldServer(type: CreateStartScripts) {
    mainClassName = 'io.grpc.examples.helloworld.HelloWorldServer'
    applicationName = 'hello-world-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task helloWorldClient(type: CreateStartScripts) {
    mainClassName = 'io.grpc.examples.helloworld.HelloWorldClient'
    applicationName = 'hello-world-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(helloWorldServer)
    from(helloWorldClient)
    fileMode = 0755
}
